 What Are Libraries?
Libraries are collections of pre-written classes, methods, and objects that provide reusable functionality for developers.
Libraries can be:
Built-in (Standard): Provided as part of the Java Development Kit (JDK), such as java.util, java.io, etc.
External: Created by third-party developers, often distributed as .jar files, and need to be added manually to your project.

Why Use Libraries?
Save Time: Provide ready-to-use functionality, reducing the need to write everything from scratch.
Improve Code Quality: Tested and optimized by experts, libraries help create robust and efficient applications.
Avoid Repetition: They follow the "Don't Repeat Yourself" (DRY) principle.


Built-in Java Libraries Examples:
java.util:
Scanner: For user input.
ArrayList, HashMap: For dynamic data structures.
java.io: For file input/output operations.
java.sql: For interacting with databases.
java.net: For networking tasks.


Custom Libraries:
You can create your own libraries by:
Writing source code.
Compiling it into .class files (bytecode).
Packaging these into a .jar file (Java Archive).


Your Understanding Summary (Refined):
Libraries are collections of classes or packages designed for reusable functionality.
Libraries can be inbuilt (e.g., java.util.Scanner) or external (e.g., Apache Commons).
They save time and help avoid rewriting common functionalities.
Custom libraries can be created by packaging your classes into a .jar file.
